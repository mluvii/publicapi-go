// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PublicAPISessionModelsSessionModelGuestInfo public Api session models session model guest info
// swagger:model PublicApi.Session.Models.SessionModel+GuestInfo
type PublicAPISessionModelsSessionModelGuestInfo struct {

	// Collection of attributes associated with the session.
	// Includes system as well as user keys.
	CallParams map[string]string `json:"callParams,omitempty"`

	// Guest IP address
	IPAddress string `json:"ipAddress,omitempty"`

	// Temporary ID, generated when guest starts a new session and enters queue.
	TempID int64 `json:"tempId,omitempty"`

	// GUID is generated for each unique guest and saved to cookie.
	// Format: uuid
	TrackedID strfmt.UUID `json:"trackedId,omitempty"`
}

// Validate validates this public Api session models session model guest info
func (m *PublicAPISessionModelsSessionModelGuestInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTrackedID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublicAPISessionModelsSessionModelGuestInfo) validateTrackedID(formats strfmt.Registry) error {

	if swag.IsZero(m.TrackedID) { // not required
		return nil
	}

	if err := validate.FormatOf("trackedId", "body", "uuid", m.TrackedID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PublicAPISessionModelsSessionModelGuestInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicAPISessionModelsSessionModelGuestInfo) UnmarshalBinary(b []byte) error {
	var res PublicAPISessionModelsSessionModelGuestInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
