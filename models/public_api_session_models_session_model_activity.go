// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PublicAPISessionModelsSessionModelActivity public Api session models session model activity
// swagger:model PublicApi.Session.Models.SessionModel+Activity
type PublicAPISessionModelsSessionModelActivity struct {

	// activity Id
	ActivityID int32 `json:"activityId,omitempty"`

	// file
	File *PublicAPISessionModelsSessionModelActivityFile `json:"file,omitempty"`

	// Forwarding activity only.
	// Note associated with forwarding.
	Note string `json:"note,omitempty"`

	// response
	// Enum: [NONE REQUESTED ACCEPTED REJECTED_USER REJECTED_SHIT_BROWSER REJECTED_NO_MIC]
	Response string `json:"response,omitempty"`

	// result
	// Enum: [SUCCESS NO_CAMERA_ONLY_MIC NO_DEVICES USER_DENIED]
	Result string `json:"result,omitempty"`

	// stream available
	StreamAvailable bool `json:"streamAvailable,omitempty"`

	// text
	Text string `json:"text,omitempty"`

	// Timestamp of activity
	// Format: date-time
	Time strfmt.DateTime `json:"time,omitempty"`

	// "Forwarding to group" activity only.
	// ID of recipient operator group.
	ToGroupID int32 `json:"toGroupId,omitempty"`

	// "Forwarding to group" activity only.
	// Name recipient operator group.
	ToGroupName string `json:"toGroupName,omitempty"`

	// "Forwarding to operator" activity only.
	// Full name of recipient.
	ToOperatorFullName string `json:"toOperatorFullName,omitempty"`

	// "Forwarding to operator" activity only.
	// User ID of recipient.
	ToOperatorUserID int32 `json:"toOperatorUserId,omitempty"`

	// Type of activity
	Type string `json:"type,omitempty"`

	// Operator who initiated the activity.
	UserID int32 `json:"userId,omitempty"`
}

// Validate validates this public Api session models session model activity
func (m *PublicAPISessionModelsSessionModelActivity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublicAPISessionModelsSessionModelActivity) validateFile(formats strfmt.Registry) error {

	if swag.IsZero(m.File) { // not required
		return nil
	}

	if m.File != nil {
		if err := m.File.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("file")
			}
			return err
		}
	}

	return nil
}

var publicApiSessionModelsSessionModelActivityTypeResponsePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NONE","REQUESTED","ACCEPTED","REJECTED_USER","REJECTED_SHIT_BROWSER","REJECTED_NO_MIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		publicApiSessionModelsSessionModelActivityTypeResponsePropEnum = append(publicApiSessionModelsSessionModelActivityTypeResponsePropEnum, v)
	}
}

const (

	// PublicAPISessionModelsSessionModelActivityResponseNONE captures enum value "NONE"
	PublicAPISessionModelsSessionModelActivityResponseNONE string = "NONE"

	// PublicAPISessionModelsSessionModelActivityResponseREQUESTED captures enum value "REQUESTED"
	PublicAPISessionModelsSessionModelActivityResponseREQUESTED string = "REQUESTED"

	// PublicAPISessionModelsSessionModelActivityResponseACCEPTED captures enum value "ACCEPTED"
	PublicAPISessionModelsSessionModelActivityResponseACCEPTED string = "ACCEPTED"

	// PublicAPISessionModelsSessionModelActivityResponseREJECTEDUSER captures enum value "REJECTED_USER"
	PublicAPISessionModelsSessionModelActivityResponseREJECTEDUSER string = "REJECTED_USER"

	// PublicAPISessionModelsSessionModelActivityResponseREJECTEDSHITBROWSER captures enum value "REJECTED_SHIT_BROWSER"
	PublicAPISessionModelsSessionModelActivityResponseREJECTEDSHITBROWSER string = "REJECTED_SHIT_BROWSER"

	// PublicAPISessionModelsSessionModelActivityResponseREJECTEDNOMIC captures enum value "REJECTED_NO_MIC"
	PublicAPISessionModelsSessionModelActivityResponseREJECTEDNOMIC string = "REJECTED_NO_MIC"
)

// prop value enum
func (m *PublicAPISessionModelsSessionModelActivity) validateResponseEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, publicApiSessionModelsSessionModelActivityTypeResponsePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PublicAPISessionModelsSessionModelActivity) validateResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.Response) { // not required
		return nil
	}

	// value enum
	if err := m.validateResponseEnum("response", "body", m.Response); err != nil {
		return err
	}

	return nil
}

var publicApiSessionModelsSessionModelActivityTypeResultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","NO_CAMERA_ONLY_MIC","NO_DEVICES","USER_DENIED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		publicApiSessionModelsSessionModelActivityTypeResultPropEnum = append(publicApiSessionModelsSessionModelActivityTypeResultPropEnum, v)
	}
}

const (

	// PublicAPISessionModelsSessionModelActivityResultSUCCESS captures enum value "SUCCESS"
	PublicAPISessionModelsSessionModelActivityResultSUCCESS string = "SUCCESS"

	// PublicAPISessionModelsSessionModelActivityResultNOCAMERAONLYMIC captures enum value "NO_CAMERA_ONLY_MIC"
	PublicAPISessionModelsSessionModelActivityResultNOCAMERAONLYMIC string = "NO_CAMERA_ONLY_MIC"

	// PublicAPISessionModelsSessionModelActivityResultNODEVICES captures enum value "NO_DEVICES"
	PublicAPISessionModelsSessionModelActivityResultNODEVICES string = "NO_DEVICES"

	// PublicAPISessionModelsSessionModelActivityResultUSERDENIED captures enum value "USER_DENIED"
	PublicAPISessionModelsSessionModelActivityResultUSERDENIED string = "USER_DENIED"
)

// prop value enum
func (m *PublicAPISessionModelsSessionModelActivity) validateResultEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, publicApiSessionModelsSessionModelActivityTypeResultPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PublicAPISessionModelsSessionModelActivity) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(m.Result) { // not required
		return nil
	}

	// value enum
	if err := m.validateResultEnum("result", "body", m.Result); err != nil {
		return err
	}

	return nil
}

func (m *PublicAPISessionModelsSessionModelActivity) validateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.Time) { // not required
		return nil
	}

	if err := validate.FormatOf("time", "body", "date-time", m.Time.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PublicAPISessionModelsSessionModelActivity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicAPISessionModelsSessionModelActivity) UnmarshalBinary(b []byte) error {
	var res PublicAPISessionModelsSessionModelActivity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
