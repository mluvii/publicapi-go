// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PublicAPIWebhookModelsWebhookModel public Api webhook models webhook model
// swagger:model PublicApi.Webhook.Models.WebhookModel
type PublicAPIWebhookModelsWebhookModel struct {

	// callback Url
	// Required: true
	CallbackURL *string `json:"callbackUrl"`

	// event types
	// Required: true
	EventTypes []string `json:"eventTypes"`
}

// Validate validates this public Api webhook models webhook model
func (m *PublicAPIWebhookModelsWebhookModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCallbackURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEventTypes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublicAPIWebhookModelsWebhookModel) validateCallbackURL(formats strfmt.Registry) error {

	if err := validate.Required("callbackUrl", "body", m.CallbackURL); err != nil {
		return err
	}

	return nil
}

var publicApiWebhookModelsWebhookModelEventTypesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UserStatusChanged","SessionStarted","SessionEnded","SessionForwarded"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		publicApiWebhookModelsWebhookModelEventTypesItemsEnum = append(publicApiWebhookModelsWebhookModelEventTypesItemsEnum, v)
	}
}

func (m *PublicAPIWebhookModelsWebhookModel) validateEventTypesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, publicApiWebhookModelsWebhookModelEventTypesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *PublicAPIWebhookModelsWebhookModel) validateEventTypes(formats strfmt.Registry) error {

	if err := validate.Required("eventTypes", "body", m.EventTypes); err != nil {
		return err
	}

	for i := 0; i < len(m.EventTypes); i++ {

		// value enum
		if err := m.validateEventTypesItemsEnum("eventTypes"+"."+strconv.Itoa(i), "body", m.EventTypes[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PublicAPIWebhookModelsWebhookModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicAPIWebhookModelsWebhookModel) UnmarshalBinary(b []byte) error {
	var res PublicAPIWebhookModelsWebhookModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
