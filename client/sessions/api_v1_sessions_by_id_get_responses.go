// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/mluvii/mluvii-api-client/models"
)

// APIV1SessionsByIDGetReader is a Reader for the APIV1SessionsByIDGet structure.
type APIV1SessionsByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIV1SessionsByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAPIV1SessionsByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAPIV1SessionsByIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAPIV1SessionsByIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAPIV1SessionsByIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAPIV1SessionsByIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAPIV1SessionsByIDGetOK creates a APIV1SessionsByIDGetOK with default headers values
func NewAPIV1SessionsByIDGetOK() *APIV1SessionsByIDGetOK {
	return &APIV1SessionsByIDGetOK{}
}

/*APIV1SessionsByIDGetOK handles this case with default header values.

Success
*/
type APIV1SessionsByIDGetOK struct {
	Payload *models.PublicAPISessionModelsSessionModel
}

func (o *APIV1SessionsByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/Sessions/{id}][%d] apiV1SessionsByIdGetOK  %+v", 200, o.Payload)
}

func (o *APIV1SessionsByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PublicAPISessionModelsSessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIV1SessionsByIDGetBadRequest creates a APIV1SessionsByIDGetBadRequest with default headers values
func NewAPIV1SessionsByIDGetBadRequest() *APIV1SessionsByIDGetBadRequest {
	return &APIV1SessionsByIDGetBadRequest{}
}

/*APIV1SessionsByIDGetBadRequest handles this case with default header values.

Bad Request
*/
type APIV1SessionsByIDGetBadRequest struct {
	Payload APIV1SessionsByIDGetBadRequestBody
}

func (o *APIV1SessionsByIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/Sessions/{id}][%d] apiV1SessionsByIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *APIV1SessionsByIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIV1SessionsByIDGetUnauthorized creates a APIV1SessionsByIDGetUnauthorized with default headers values
func NewAPIV1SessionsByIDGetUnauthorized() *APIV1SessionsByIDGetUnauthorized {
	return &APIV1SessionsByIDGetUnauthorized{}
}

/*APIV1SessionsByIDGetUnauthorized handles this case with default header values.

Unauthorized
*/
type APIV1SessionsByIDGetUnauthorized struct {
}

func (o *APIV1SessionsByIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/Sessions/{id}][%d] apiV1SessionsByIdGetUnauthorized ", 401)
}

func (o *APIV1SessionsByIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAPIV1SessionsByIDGetForbidden creates a APIV1SessionsByIDGetForbidden with default headers values
func NewAPIV1SessionsByIDGetForbidden() *APIV1SessionsByIDGetForbidden {
	return &APIV1SessionsByIDGetForbidden{}
}

/*APIV1SessionsByIDGetForbidden handles this case with default header values.

Forbidden
*/
type APIV1SessionsByIDGetForbidden struct {
}

func (o *APIV1SessionsByIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/Sessions/{id}][%d] apiV1SessionsByIdGetForbidden ", 403)
}

func (o *APIV1SessionsByIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAPIV1SessionsByIDGetNotFound creates a APIV1SessionsByIDGetNotFound with default headers values
func NewAPIV1SessionsByIDGetNotFound() *APIV1SessionsByIDGetNotFound {
	return &APIV1SessionsByIDGetNotFound{}
}

/*APIV1SessionsByIDGetNotFound handles this case with default header values.

Session ID not found.
*/
type APIV1SessionsByIDGetNotFound struct {
}

func (o *APIV1SessionsByIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/Sessions/{id}][%d] apiV1SessionsByIdGetNotFound ", 404)
}

func (o *APIV1SessionsByIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*APIV1SessionsByIDGetBadRequestBody API v1 sessions by ID get bad request body
swagger:model APIV1SessionsByIDGetBadRequestBody
*/
type APIV1SessionsByIDGetBadRequestBody map[string]string

// Validate validates this API v1 sessions by ID get bad request body
func (o APIV1SessionsByIDGetBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
